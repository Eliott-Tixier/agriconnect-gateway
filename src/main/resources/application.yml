# Proprietes de l'application
spring:
  application:
    name: apigateway # nom de l'application
  cloud:
    # Configuration de l'API Gateway
    gateway:
      discovery:
        locator:
          enabled: true #activation eureka locator
          lowerCaseServiceId: true
          # car le nom des services est en minuscule dans l'URL
      # Configuration des routes de l'API Gateway
      routes:
        #Service ACTIONNEUR
        - id: actionneur-service
          uri: lb://agriconnect-actionneurs/ #Attention : lb et pas HTTP. Lb est prêt pour faire du load-balancing
          predicates:
            # On matche tout ce qui commence par /api/actionneurs
            - Path=/api/actionneurs/**
          filters:
            # On va réécrire l'URL pour enlever le /api/actionneurs
            - RewritePath=/api/actionneurs/(?<segment>.*), /$\\{segment}
        #Service CAPTEUR
        - id: capteur-service
          uri: lb://agriconnect-capteur/
          predicates:
            - Path=/api/capteurs/**
          filters:
            - RewritePath=/api/capteurs/(?<segment>.*), /$\\{segment}
        #Service RELEVE
        - id: releve-service
          uri: lb://agriconnect-releve/ #Attention : lb et pas HTTP. Lb est prêt pour faire du load-balancing
          predicates:
            # On matche tout ce qui commence par /api/releves
            - Path=/api/releves/**
          filters:
            # On va réécrire l'URL pour enlever le /api/releves
            - RewritePath=/api/releves/(?<segment>.*), /$\\{segment}
        #Service CAPTEUR-RELEVE
        - id: capteur-releve-composite
          uri: lb://agriconnect-composite-capteur-releve/
          predicates:
            - Path=/api/capteurreleve/**
          filters:
            - RewritePath=/api/capteurreleve/(?<segment>.*), /$\\{segment}
      enabled: on # Activation gateway
    # Activation remontée management dans Eureka
    config:
      service-registry:
        auto-registration:
          register-management: on
# Activation des endpoints pour le monitoring
management:
  endpoints:
    web:
      exposure:
        include: env, health, info, metrics, loggers, mappings, prometheus
  tracing:
    sampling:
      probability: 1.0

# Configuration client de l'annuaire
# L'API Gateway va s'enregistrer comme un micro-service sur l'annuaire
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/ # url d'accès à l'annuaire
  instance:
    metadata-map:
      prometheus.scrape: "true"
      prometheus.path: "/actuator/prometheus"
      prometheus.port: "${management.server.port}"

# Configuration du log.
logging:
  level:
    org.springframework.web: INFO
    org.springframework.cloud.gateway: DEBUG
    reactor.netty: DEBUG
    reactor.netty.http.client: DEBUG # pour avoir plus d'infos sur les appels HTTP

# Proprietes du serveur d'entreprise
server:
  port: 10000 # HTTP (Tomcat) port
